name: Manager Python Tests

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  schedule:
    - cron: '0 22 * * 5' # Every Sunday at 10 pm

jobs:
  test:
    name: manager-test
    runs-on: ubuntu-latest
    env:
      DUCKDB_LOAD_ONLY: "1"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Cache conda environment
        uses: actions/cache@v4
        env:
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key: >
            ${{ format('{0}-conda-{1}-{2}',
              runner.os,
              env.CACHE_NUMBER,
              hashFiles('targets/slideruleearth-aws/docker/manager/environment.yml')) }}

      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          auto-activate-base: false
          activate-environment: manager
          environment-file: targets/slideruleearth-aws/docker/manager/environment.yml
          use-only-tar-bz2: true

      - name: Download and install DuckDB spatial extension
        shell: bash -l {0}
        run: |
          EXT=$(python -c "import duckdb; print(duckdb.__version__)")
          PLATFORM="linux_amd64"
          EXT_DIR="$HOME/.duckdb/extensions/v${EXT}/${PLATFORM}"
          mkdir -p "${EXT_DIR}"

          curl -L "https://extensions.duckdb.org/v${EXT}/${PLATFORM}/spatial.duckdb_extension.gz" \
            | gunzip -c > "${EXT_DIR}/spatial.duckdb_extension"

      - name: Initialize manager database
        shell: bash -l {0}
        working-directory: targets/slideruleearth-aws/docker/manager
        run: |
          # Build the DuckDB database
          sudo mkdir -p /data
          sudo chmod 777 /data
          make init

      - name: Run manager tests with coverage
        shell: bash -l {0}
        working-directory: targets/slideruleearth-aws/docker/manager
        run: |
          make test
